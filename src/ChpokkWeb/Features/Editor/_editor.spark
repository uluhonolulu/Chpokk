<viewdata model="ChpokkWeb.Features.Editor.CodeEditorModel" />

<Stylesheet href="editor.css" />
<div id="code" contenteditable="true">${Model.Content}</div>
<div id="log"></div>
	<script type="text/javascript">

		function updateHtml(callback) {
			var text = $('#code').text();
			var toHtmlUrl = "${this.Urls.UrlFor<ChpokkWeb.Features.Editor.Colorizer.ColorizerInputModel>()}"; 
			$('#code').load(toHtmlUrl, { Code: text }, callback);
		}


		$(function () {
			updateHtml();
			$('#code').keyup(function () {
				var sel = window.getSelection();
				//trace(sel.anchorNode.nodeName);
				var initialOffset = sel.anchorOffset;
				//trace(sel.getRangeAt(0).startOffset);
				var currentNode = sel.anchorNode; // text node
				var parentNode = currentNode.parentNode; // span node
				var nodeIndex = getNodePosition(parentNode);
				//debugger;
				updateHtml(function(parameters) {
					var range = window.getSelection().getRangeAt(0);
					//trace(sel.anchorNode.nodeName);
					//trace(nodeIndex);
					currentNode = range.startContainer.childNodes[nodeIndex].childNodes[0];
					//debugger;
					range.setStart(currentNode, initialOffset);
					sel.removeAllRanges();
					sel.addRange(range);
					
				});
			});
		});

		function getNodePosition(node) {
			var parentNode = node.parentNode;
			if (parentNode === null) return -1;
			return $.inArray(node, parentNode.childNodes);
		}

		function getCaretPosition(editableDiv) {
			var caretPos = 0, containerEl = null, sel, range;
			if (window.getSelection) {
				sel = window.getSelection();
				if (sel.rangeCount) {
					range = sel.getRangeAt(0);
					var parentNode = range.commonAncestorContainer.parentNode;
					var grandParentNode = parentNode.parentNode;
					var index = $.inArray(parentNode, grandParentNode.childNodes);
					var length = 0;
					for (var i = 0; i < index; i++) {
						var node = grandParentNode.childNodes[i];
						length += (node.nodeType === 3)? node.length : node.outerHTML.length;
					}
					caretPos = range.endOffset + length;
					debugger;
					if (parentNode == editableDiv) {
						caretPos = range.endOffset;
					}
				}
			} else if (document.selection && document.selection.createRange) {
				range = document.selection.createRange();
				if (range.parentElement() == editableDiv) {
					var tempEl = document.createElement("span");
					editableDiv.insertBefore(tempEl, editableDiv.firstChild);
					var tempRange = range.duplicate();
					tempRange.moveToElementText(tempEl);
					tempRange.setEndPoint("EndToEnd", range);
					caretPos = tempRange.text.length;
				}
			}
			return caretPos;
		}

		function trace(message) {
			$('#log').html($('#log').html() + message + "<br/> ");
		}
	</script>

