<content name="InlineScripts">
	<!--Compile-->
	<script type="text/javascript">
		$(function() {
			var compilerHub = $.connection.compilerHub;
			compilerHub.client.danger = function (message, wrap) { logToOutputWindow(message, 'danger', wrap); };
			compilerHub.client.success = function (message, wrap) { logToOutputWindow(message, 'success', wrap); };
			compilerHub.client.info = function (message, wrap) { logToOutputWindow(message, 'info', wrap); };
			
		});
		amplify.subscribe('connected', function(connectionId) {
			attachButtonHandlers(connectionId);
		});

		function attachButtonHandlers(connectionId) {
			$('#compileButton').click(function() {
				initLogging();
				var model = tabs.activeModel();
				if (model.ProjectPath) {
					var compileUrl = '${Urls.UrlFor<ChpokkWeb.Features.Compilation.CompileInputModel>()}';
					var editor = ace.edit("ace");
					$.post(compileUrl, $.extend({}, model, { Content: editor.getValue(), ConnectionId: connectionId }));
				} else {
					alert("Don't know what to compile. Please open a file first.");
				}
			});
			$('#runButton').click(function() {
				initLogging();
				var model = tabs.activeModel();
				if (model.ProjectPath) {
					var runUrl = '${Urls.UrlFor<ChpokkWeb.Features.Compilation.CompileAndRunInputModel>()}';
					var editor = ace.edit("ace");
					$.post(runUrl, $.extend({}, model, { Content: editor.getValue(), ConnectionId: connectionId }));
				} else {
					alert("Don't know what to run. Please open a file first.");
				}
			});
			$('#compileSolutionButton').click(function() {
				initLogging();
				var model = tabs.activeModel();
				var compileSolutionUrl = '${Urls.UrlFor<ChpokkWeb.Features.Compilation.CompileSolutionInputModel>()}';
				var editor = ace.edit("ace");
				$.post(compileSolutionUrl, $.extend({}, model, { Content: editor.getValue(), ConnectionId: $.connection.hub.id })); //connectionId
			});

		}


		function initLogging() {
			$('#output').show();
			$('#output').empty();
			$('#output').get(0).scrollIntoView(top);
			logToOutputWindow("Please wait..");

		}

		function logToOutputWindow(message, category, wrap) {
			var container = wrap ? $('<div/>') : $('<span/>');
			if (message.line) {
				message = '<a href="/Repository/{RepositoryName}#{file}?line={line}">{message}</a>'.toFormat($.extend(message, model));
				container.html(message);
			} else {
				container.text(message);
			}
			container.addClass(category).appendTo($('#output'));
			//scroll to bottom
			var outputElement = $('#output').get(0);
			outputElement.scrollTop = outputElement.scrollHeight;

		}
	</script>
</content>

