<use namespace="ChpokkWeb.Features.ProjectManagement.References.NuGet" />
<div class="col-sm-11" style="padding: 0;">
    <input class="form-control input-sm" type="text" placeholder="search" id="packageSearch"/>
</div>
<div class="col-sm-1 clearfix" style="padding: 0;">
    <button type="button" class="btn btn-sm" id="packageSearchButton">
        <span class="glyphicon glyphicon-search"></span>
    </button>
</div>
<div><img src="/_content/images/loader.gif" id="packagesLoading" style="display: none;"></div>


<div id="packagesContainer" style="height: 200px; overflow-y: auto; clear: both;" class="clearfix">
    
</div>

<content name="InlineScripts">
<!-- NugetPackages.spark -->
    <script type="text/javascript">
        $(function() {
            $('#packageSearch').keyup(function(e) {
                if (e.which == 13) {
                    findPackages($(e.target).val());
                }
                return false;
            });
            $('#packageSearchButton').click(function() {
                findPackages($('#packageSearch').val());
            });
            
            //open a hub connection and assign the connection ID to the model.
            setupHub();
            
            function findPackages(query) {
                //display loading animation
                $('#packagesLoading').show();
                //clean unchecked refs
                $('#packagesContainer input:checkbox:not(:checked)').parent('div').remove();
                var url = '!{this.Urls.UrlFor<NugetPackagesInputModel>()}';
                var data = { Query: query };
                $.post(url, data, function(result) {
                    //TODO: filter out what's here already
                    var template = '<div><input type="checkbox" name="Packages" value=\'$${Id}\' id=\'$${Id}\'> <label for=\'$${Id}\' title="$${Description}">$${Id} $${Version}</label></div>';
                    $.tmpl(template, result.Packages).appendTo($('#packagesContainer'));
                    $('#packagesLoading').hide();
                });
            }
            
            function setupHub() {
                $.connection.hub.start()
                    .done(function () {
                        model.ConnectionId = $.connection.hub.id;
                    });
                var nuGetHub = $.connection.nuGetHub;
                nuGetHub.client.Write = function(message) {
                    $('<span/>').text(message).appendTo($('#createProjectLogger'));
                };
                nuGetHub.client.WriteLine = function(message, color) {
                    $('<div/>').css('color',color).text(message).appendTo($('#createProjectLogger'));
                };
            }
        });
        
    </script>
</content>
