<use namespace="ChpokkWeb.Features.ProjectManagement.AddItem" />
<use namespace="ChpokkWeb.Features.Exploring" />



<content name="Dialogs">
<!-- New item dialog -->
<div class="modal fade" id="newItemDialog">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
				<h3 id="myModalLabel">Choose the name and the path for the new file</h3>
			</div>
			<div class="modal-body">
				<label>Select the containing folder</label>
				<div id="folderBrowser">
					<ul class="jqueryFileTree" style="display: none;">
						<li class="directory collapsed">
							<a href="#" rel="/this/folder/">Solution Name</a>
							<li class="directory collapsed">
								<a href="#">Project name</a>
							</li>
						</li>
					</ul>
				</div>
				
				
				<label>File name</label>
				<input class="form-control" name="PathRelativeToRepositoryRoot" id="fileName"/>
				<label>Project</label>
				<span id="projectNameDisplay"></span>
				<input type="hidden" name="ProjectPathRelativeToRepositoryRoot" id="projectName"/>
	
			</div>
			<div class="modal-footer">
				<button class="btn btn-primary" id="addSelectedItemButton">Add it</button>
				<button class="btn" data-dismiss="modal" aria-hidden="true" id="cancelAddingButton">Cancel</button>
			</div>
		</div>
	</div>
</div>	

</content>


<content name="InlineScripts">
	<script type="text/javascript">
		$(function () {
			var additemUrl = '${Urls.UrlFor<AddItemInputModel>()}';
			$('#newItemButton').click(function () {
				$('#newItemDialog').modal();
				// folder browser 
				var folderBrowserOptions = {
					script: '!{Urls.UrlFor<SolutionFolderExplorerInputModel>()}',
					lazy: false,
					additionalData: model,
					loadHandler: function (data, container) {
						loadBranch = function (item, container) {
							var ul = $('<ul/>')
									.addClass("jqueryFileTree")
									.hide();
							var li = $('<li/>')
									.addClass('directory')
									.addClass('collapsed')
									.appendTo(ul);
							li.append($('<a/>').attr('rel', item.PathRelativeToRepositoryRoot).text(item.Name).attr('type', item.Type).data({ path: item.Data ? item.Data.ProjectPath : null }));
							$.each(item.Children, function (index, item) {
								loadBranch(item, li);
							});
							container.append(ul);
						};
						container.html('');
						$.each(data.Items, function (index, item) {
							loadBranch(item, container);
						});
					}
				};

				$('#newItemDialog #folderBrowser').fileTree(folderBrowserOptions, function (path) {
					$('#fileName').val(path);
				});
				$('#newItemDialog #folderBrowser').on('click', 'li.directory', function (e) {
					var path = $(this).children('a').attr('rel');
					if (path) {
						$('#fileName').val(path + '\\');
						$('#fileName').focus();
						e.stopPropagation();
					}

					var projectLink = $(this).find('>a[type="project"]');
					if (projectLink.length === 0)
						projectLink = $(this).parents(':has(>a[type="project"])').find('>a');
					var projectPath = projectLink.data('path');
					$('#projectName').val(projectPath);
					$('#projectNameDisplay').html(projectPath);
				});
				$('#newItemDialog #addSelectedItemButton').one('click', function () {
					var validated = validateAddItemDialog();
					if (!validated) {
						$('#newItemDialog').modal('hide');
						return;
					}
					$.post(additemUrl,
							$.extend(model,
								{
									PathRelativeToRepositoryRoot: $('#fileName').val(),
									ProjectPathRelativeToRepositoryRoot: $('#projectName').val()
								}),
							function () {
								amplify.publish('newItem', $('#fileName').val());
								location.hash = $('#fileName').val();
								$('#newItemDialog').modal('hide');
							});
				});
			});
				});

		function validateAddItemDialog() {
			var valid = true;
			if (!$('#fileName').val() || $('#fileName').val().endsWith('\\')) {
				alert("File name should't be empty");
				valid = false;
			}
			if (!$('#projectName').val()) {
				alert("Project name shouldn't be empty");
				valid = false;
			}
			return valid;
		}
	</script>
</content>